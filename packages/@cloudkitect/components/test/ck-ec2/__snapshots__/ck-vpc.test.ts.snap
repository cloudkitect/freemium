// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Well Architected VPC defaults Well Architected VPC 1`] = `
{
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
      "DependsOn": [
        "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip",
        },
        "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group",
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "ec2:AuthorizeSecurityGroupIngress",
                    "ec2:AuthorizeSecurityGroupEgress",
                    "ec2:RevokeSecurityGroupIngress",
                    "ec2:RevokeSecurityGroupEgress",
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition",
                          },
                          ":ec2:",
                          {
                            "Ref": "AWS::Region",
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId",
                          },
                          ":security-group/",
                          {
                            "Fn::GetAtt": [
                              "MyVPCAFB07A31",
                              "DefaultSecurityGroup",
                            ],
                          },
                        ],
                      ],
                    },
                  ],
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "Inline",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "MyVPCAFB07A31": {
      "DeletionPolicy": "Retain",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
      "UpdateReplacePolicy": "Retain",
    },
    "MyVPCIGW30AB6DD6": {
      "Properties": {
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "MyVPCIsolatedSubnet1RouteTable62A5A725": {
      "Properties": {
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/IsolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVPCIsolatedSubnet1RouteTableAssociation31389557": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVPCIsolatedSubnet1RouteTable62A5A725",
        },
        "SubnetId": {
          "Ref": "MyVPCIsolatedSubnet1Subnet2AF53E58",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVPCIsolatedSubnet1Subnet2AF53E58": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.4.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/IsolatedSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVPCIsolatedSubnet2RouteTable34C25EE6": {
      "Properties": {
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/IsolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVPCIsolatedSubnet2RouteTableAssociationC54CCC55": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVPCIsolatedSubnet2RouteTable34C25EE6",
        },
        "SubnetId": {
          "Ref": "MyVPCIsolatedSubnet2Subnet1EFDACED",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVPCIsolatedSubnet2Subnet1EFDACED": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.5.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Isolated",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/IsolatedSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVPCPrivateSubnet1DefaultRouteA8EE6636": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVPCPublicSubnet1NATGateway838228A5",
        },
        "RouteTableId": {
          "Ref": "MyVPCPrivateSubnet1RouteTable133BD901",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVPCPrivateSubnet1RouteTable133BD901": {
      "Properties": {
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVPCPrivateSubnet1RouteTableAssociation85DFBFBB": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVPCPrivateSubnet1RouteTable133BD901",
        },
        "SubnetId": {
          "Ref": "MyVPCPrivateSubnet1Subnet641543F4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVPCPrivateSubnet1Subnet641543F4": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.2.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVPCPrivateSubnet2DefaultRoute37F90B5D": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "MyVPCPublicSubnet2NATGateway4D6E78B8",
        },
        "RouteTableId": {
          "Ref": "MyVPCPrivateSubnet2RouteTableDF3CB76C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVPCPrivateSubnet2RouteTableAssociationC373B6FE": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVPCPrivateSubnet2RouteTableDF3CB76C",
        },
        "SubnetId": {
          "Ref": "MyVPCPrivateSubnet2SubnetA420D3F0",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVPCPrivateSubnet2RouteTableDF3CB76C": {
      "Properties": {
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVPCPrivateSubnet2SubnetA420D3F0": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.3.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVPCPublicSubnet1DefaultRouteAF81AA9B": {
      "DependsOn": [
        "MyVPCVPCGWE6F260E1",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVPCIGW30AB6DD6",
        },
        "RouteTableId": {
          "Ref": "MyVPCPublicSubnet1RouteTable538A9511",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVPCPublicSubnet1EIP5EB6147D": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "MyVPCPublicSubnet1NATGateway838228A5": {
      "DependsOn": [
        "MyVPCPublicSubnet1DefaultRouteAF81AA9B",
        "MyVPCPublicSubnet1RouteTableAssociation8A950D8E",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyVPCPublicSubnet1EIP5EB6147D",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "MyVPCPublicSubnet1Subnet0C75866A",
        },
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "MyVPCPublicSubnet1RouteTable538A9511": {
      "Properties": {
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVPCPublicSubnet1RouteTableAssociation8A950D8E": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVPCPublicSubnet1RouteTable538A9511",
        },
        "SubnetId": {
          "Ref": "MyVPCPublicSubnet1Subnet0C75866A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVPCPublicSubnet1Subnet0C75866A": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVPCPublicSubnet2DefaultRoute24460202": {
      "DependsOn": [
        "MyVPCVPCGWE6F260E1",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "MyVPCIGW30AB6DD6",
        },
        "RouteTableId": {
          "Ref": "MyVPCPublicSubnet2RouteTableA6A1CD3D",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "MyVPCPublicSubnet2EIP6F364C5D": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "MyVPCPublicSubnet2NATGateway4D6E78B8": {
      "DependsOn": [
        "MyVPCPublicSubnet2DefaultRoute24460202",
        "MyVPCPublicSubnet2RouteTableAssociationF22D63CA",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "MyVPCPublicSubnet2EIP6F364C5D",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "MyVPCPublicSubnet2Subnet4DDFF14C",
        },
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "MyVPCPublicSubnet2RouteTableA6A1CD3D": {
      "Properties": {
        "Tags": [
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "MyVPCPublicSubnet2RouteTableAssociationF22D63CA": {
      "Properties": {
        "RouteTableId": {
          "Ref": "MyVPCPublicSubnet2RouteTableA6A1CD3D",
        },
        "SubnetId": {
          "Ref": "MyVPCPublicSubnet2Subnet4DDFF14C",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "MyVPCPublicSubnet2Subnet4DDFF14C": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "CkComponents",
            "Value": "2.128.0",
          },
          {
            "Key": "CkVendor",
            "Value": "CloudKitect",
          },
          {
            "Key": "Name",
            "Value": "TestStack/MyVPC/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "MyVPCRestrictDefaultSecurityGroupCustomResourceC3FF5EE0": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Account": {
          "Ref": "AWS::AccountId",
        },
        "DefaultSecurityGroupId": {
          "Fn::GetAtt": [
            "MyVPCAFB07A31",
            "DefaultSecurityGroup",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
            "Arn",
          ],
        },
      },
      "Type": "Custom::VpcRestrictDefaultSG",
      "UpdateReplacePolicy": "Delete",
    },
    "MyVPCVPCGWE6F260E1": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "MyVPCIGW30AB6DD6",
        },
        "VpcId": {
          "Ref": "MyVPCAFB07A31",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
